/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using NSubstitute;
using NSubstitute.ExceptionExtensions;
using NUnit.Framework;
using System;
using System.Collections.Generic;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;
using Twilio.Rest.FlexApi.V1;

namespace Twilio.Tests.Rest.FlexApi.V1
{

    [TestFixture]
    public class GoodDataTest : TwilioTest
    {
        [Test]
        public void TestCreateRequest()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            var request = new Request(
                HttpMethod.Post,
                Twilio.Rest.Domain.FlexApi,
                "/v1/Accounts/GoodData",
                ""
            );
            request.AddHeaderParam("Token", Serialize("token"));
            twilioRestClient.Request(request).Throws(new ApiException("Server Error, no content"));

            try
            {
                GoodDataResource.Create(token: Serialize("token"), client: twilioRestClient);
                Assert.Fail("Expected TwilioException to be thrown for 500");
            }
            catch (ApiException) {}
            twilioRestClient.Received().Request(request);
        }

        [Test]
        public void TestCreateResponse()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            twilioRestClient.AccountSid.Returns("ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            twilioRestClient.Request(Arg.Any<Request>())
                            .Returns(new Response(
                                         System.Net.HttpStatusCode.Created,
                                         "{\"session_expiry\": \"2022-09-27T09:28:01Z\",\"workspace_id\": \"clbi1eelh1x8z4.......ijpnyu\",\"session_id\": \"-----BEGIN PGP MESSAGE-----\\n\\nwcBMA11tX1FL13rp\\u2026\\u2026kHXd\\n=vOBk\\n-----END PGP MESSAGE-----\\n\",\"url\": \"https://flex-api.twilio.com/v1/Accounts/GoodData\"}"
                                     ));

            var response = GoodDataResource.Create(token: Serialize("token"), client: twilioRestClient);
            Assert.NotNull(response);
        }
    }

}