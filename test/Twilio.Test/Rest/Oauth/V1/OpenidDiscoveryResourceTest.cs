/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using NSubstitute;
using NSubstitute.ExceptionExtensions;
using NUnit.Framework;
using System;
using System.Collections.Generic;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;
using Twilio.Rest.Oauth.V1;

namespace Twilio.Tests.Rest.Oauth.V1
{

    [TestFixture]
    public class OpenidDiscoveryTest : TwilioTest
    {
        [Test]
        public void TestFetchRequest()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            var request = new Request(
                HttpMethod.Get,
                Twilio.Rest.Domain.Oauth,
                "/v1/well-known/openid-configuration",
                ""
            );
            twilioRestClient.Request(request).Throws(new ApiException("Server Error, no content"));

            try
            {
                OpenidDiscoveryResource.Fetch(client: twilioRestClient);
                Assert.Fail("Expected TwilioException to be thrown for 500");
            }
            catch (ApiException) {}
            twilioRestClient.Received().Request(request);
        }

        [Test]
        public void TestFetchResponse()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            twilioRestClient.AccountSid.Returns("ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            twilioRestClient.Request(Arg.Any<Request>())
                            .Returns(new Response(
                                         System.Net.HttpStatusCode.OK,
                                         "{\"issuer\": \"https://iam.twilio.com\",\"authorization_endpoint\": \"https://oauth.twilio.com/oauth2/authorize\",\"device_authorization_endpoint\": \"https://oauth.twilio.com/oauth2/device/authorize\",\"token_endpoint\": \"https://oauth.twilio.com/oauth2/token\",\"userinfo_endpoint\": \"https://oauth.twilio.com/oauth2/userinfo\",\"revocation_endpoint\": \"https://oauth.twilio.com/oauth2/revoke\",\"jwk_uri\": \"https://oauth.twilio.com/oauth2/certs\",\"response_type_supported\": [\"code\",\"token\"],\"subject_type_supported\": [\"account_sid\",\"user_sid\"],\"id_token_signing_alg_values_supported\": [\"ECDSA\",\"RSA256\"],\"scopes_supported\": [\"openid\",\"profile\",\"email\"],\"claims_supported\": [\"act\",\"aud\",\"cid\",\"device_id\",\"exp\",\"jti\",\"iat\",\"iss\",\"nbf\",\"scp\",\"sub\"],\"url\": \"https://oauth.twilio.com/v1/well-known/openid-configuration\"}"
                                     ));

            var response = OpenidDiscoveryResource.Fetch(client: twilioRestClient);
            Assert.NotNull(response);
        }
    }

}