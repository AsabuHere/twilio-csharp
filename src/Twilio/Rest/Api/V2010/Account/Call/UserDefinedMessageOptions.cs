/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Api.V2010.Account.Call
{

    /// <summary>
    /// Create a new User Defined Message for the given call sid.
    /// </summary>
    public class CreateUserDefinedMessageOptions : IOptions<UserDefinedMessageResource>
    {
        /// <summary>
        /// Account Sid.
        /// </summary>
        public string PathAccountSid { get; set; }
        /// <summary>
        /// Call Sid.
        /// </summary>
        public string PathCallSid { get; }
        /// <summary>
        /// A unique string value to identify API call. This should be a unique string value per API call and can be a randomly generated.
        /// </summary>
        public string Content { get; }
        /// <summary>
        /// A unique string value to identify API call. This should be a unique string value per API call and can be a randomly generated.
        /// </summary>
        public string IdempotencyKey { get; set; }

        /// <summary>
        /// Construct a new CreateUserDefinedMessageOptions
        /// </summary>
        /// <param name="pathCallSid"> Call Sid. </param>
        /// <param name="content"> A unique string value to identify API call. This should be a unique string value per API
        ///               call and can be a randomly generated. </param>
        public CreateUserDefinedMessageOptions(string pathCallSid, string content)
        {
            PathCallSid = pathCallSid;
            Content = content;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (Content != null)
            {
                p.Add(new KeyValuePair<string, string>("Content", Content));
            }

            if (IdempotencyKey != null)
            {
                p.Add(new KeyValuePair<string, string>("IdempotencyKey", IdempotencyKey));
            }

            return p;
        }
    }

}